version: "3.7"
volumes:
  shared-folder:
services:
  neo4j:
    build: ./docker-files/neo4j
    container_name: neo4j-service
    hostname: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
      - "9094:9094"
      - "2181:2181"
    ulimits:
      nproc: 65535
      nofile:
        soft: 40000
        hard: 60000
    volumes:
      - shared-folder:/data
    environment:
      NEO4J_AUTH: none
      NEO4J_dbms_logs_debug_level: DEBUG
      # KAFKA related configuration
      NEO4J_kafka_zookeeper_connect: ${ZOOKEEPER_CONNECT}
      NEO4J_kafka_bootstrap_servers: ${BOOTSTRAP_SERVERS}
      NEO4J_kafka_security_protocol: SSL
      NEO4J_kafka_ssl_truststore_location: /var/lib/neo4j/temp/kafka.client.truststore.jks
      NEO4J_kafka_acks: 1
      NEO4J_kafka_num_partitions: 1
      NEO4J_kafka_retries: 2
      # streams
      NEO4J_streams_procedures_enabled: "true"
      NEO4J_streams_source_enabled: "true"
      NEO4J_streams_source_topic_nodes_neo4j: Person{*};Movie{*}
      NEO4J_streams_source_topic_relationships_neo4j: ACTED_IN{*}
      NEO4J_streams_source_schema_polling_interval: 10000
      # other
      NEO4J_apoc_trigger_enabled: "true"
      NEO4J_dbms_jvm_additional: -Djavax.net.debug=ssl:handshake
      NEO4J_dbms_security_procedures_whitelist: apoc.*,streams.*
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,streams.*
